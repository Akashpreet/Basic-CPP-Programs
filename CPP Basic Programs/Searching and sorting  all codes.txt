All codes provided by Programmers of cuiet:
join officail telegram: https://t.me/cuiet_progg
--------------------------------------------------------

_____________________________________________________________________
Code Binary Search

int binarySearch(int *arr, int n, int y)
{
    int start=0;
    int end = n-1;
    
    while(start<=end){
        int mid = (start+end)/2;
        if (arr[mid]==y){
           return mid;
           
        }
        else if(y>arr[mid]){
            
            start=mid+1;
            
        }
        else if (y<arr[mid]){
            
            end=mid-1;
            
        }
    }
    return -1;

}
_____________________________________________________________________
Code Bubble Sort

void bubbleSort(int *arr, int n)
{
    //Write your code here
    for (int i =0;i<n-1;i++){
        for (int j=0;j<n-1-i;j++){
            if (arr[j]>arr[j+1]){
                int temp=arr[j];
                arr[j]=arr[j+1];
                arr[j+1]=temp;
            }
        }
        
    }
}
_____________________________________________________________________
Code Insertion Sort

void insertionSort(int *arr, int n)
{
    //Write your code here
    for (int i=0;i<n-1;i++){
        int min=arr[i],min_index=i;
        for (int j=i;j<n;j++){
            if(arr[j]<min){
                min=arr[j];
                min_index=j;
            }
            
        }
        //swap
        int temp=arr[i];
        arr[i]=arr[min_index];
        arr[min_index]=temp;
        
        
        
    }
    /*for(int i=0;i<n;i++){
        std::cout << arr[i]<<" ";
    }*/
}
_____________________________________________________________________
Code Merge Two Sorted Arrays

void merge(int *arr, int n, int *arr2, int m, int *arr3)
{
    //Write your code here  
    int i=0,j=0,x=0; 
    while(i<n and j<m){ 
         
            if (arr[i]>arr2[j]){ 
                arr3[x]=arr2[j]; 
                j++; 
                x++; 
            } 
            else{ 
                arr3[x]=arr[i]; 
                i++; 
                x++; 
            } 
       
         
    } 
    while(i<n){ 
        arr3[x]=arr[i]; 
        x++; 
        i++; 
    } 
    while(j<m){ 
        arr3[x]=arr2[j]; 
        x++; 
        j++; 
    } 
    /*for(int i=0;i<n+m;i++){ 
         
        cout<<arr3[i]<<" "; 
    }*/
}
_____________________________________________________________________
Push Zeros to end

void pushZeroesEnd(int *arr, int n)
{
        int next_number=0,i =0; 
    while(i<n){ 
        if (arr[i]!=0){ 
            int temp=arr[next_number]; 
            arr[next_number]=arr[i]; 
            arr[i]=temp; 
            next_number++; 
        } 
        i++; 
    } 
}
_____________________________________________________________________
Rotate array

void swap(int arr[],int start,int end){ 
    int temp=arr[start]; 
    arr[start]=arr[end]; 
    arr[end]=temp; 
} 
 
void reverse(int arr[],int start,int end){ 
    while (start<end){ 
        swap(arr,start,end); 
        start++; 
        end--; 
         
    } 
} 






void rotate(int *arr, int d, int n)
{
        if (n==0){ 
        return; 
    } 
    if (d>=n and n!=0 ){ 
        d=d%n; 
    } 
    reverse(arr,0,n-1); 
    reverse(arr,0,n-d-1); 
    reverse(arr,n-d,n-1); 
}
_____________________________________________________________________
Second Largest in array

#include <climits>

int findSecondLargest(int *arr, int n)
{
    long int sl= INT_MIN; 
    int fl=arr[0]; 
    for (int i =0;i<n;i++){ 
        if(arr[i]>sl and arr[i]>fl){ 
            sl=fl; 
            fl=arr[i]; 
        } 
        else if(arr[i]>sl and arr[i]<fl){
			sl=arr[i];
        }
    } 
    return sl; 
}
_____________________________________________________________________
Check Array Rotation

int arrayRotateCheck(int *arr, int n)
{
    if (n==0){
         return 0;
    }
    int sum=0; 
    for (int i =0;i<n;i++){ 
        if(arr[i]<arr[i+1]){ 
            sum=sum+1; 
        } 
        else if(i!=0 and arr[i]>arr[i+1]) { 
            sum=sum+1; 
            break; 
        } 
        else{ 
            break; 
        } 
         
    } 
    sum=sum%n; 
    return sum; 
}
_____________________________________________________________________
Sort 0 1 2

void sort012(int *arr, int n)
{
        int next_two=n-1,next_zero=0,i =0; 
    while(i<=next_two){ 
        if (arr[i]==0){ 
            int temp=arr[next_zero]; 
            arr[next_zero]=arr[i]; 
            arr[i]=temp; 
            next_zero++; 
            i++; 
        } 
        else if(arr[i]==2){ 
            int temp=arr[next_two]; 
            arr[next_two]=arr[i]; 
            arr[i]=temp; 
            next_two--; 
             
             
        } 
        else{ 
           i++; 
        } 
} 
} 
_____________________________________________________________________
Sum of Two Arrays

void sumOfTwoArrays(int *arr, int n, int *arr2, int m, int *arr3)
{
    int x=0; 
    if (n>m){ 
        x=n+1; 
         
    } 
    else if(m>n){ 
        x=m+1; 
    } 
    else{ 
        x=n+1; 
    } 
     
    
    int carry=0; 
    int i=n-1,j=m-1,y=x-1; 
    while(i>=0 and j>=0 ){ 
        int num=arr[i]+arr2[j]+carry; 
        arr3[y]=num%10; 
        carry=num/10; 
        i--; 
        j--; 
        y--; 
         
    } 
     
    while(i>=0){ 
        arr3[y]=(arr[i]+carry)%10; 
        carry=(arr[i]+carry)/10; 
        i--; 
        y--; 
         
    } 
    while(j>=0){ 
        arr3[y]=(arr2[j]+carry)%10; 
        carry=(arr2[j]+carry)/10; 
        j--; 
        y--; 
    } 
    if(carry!=0){ 
        arr3[y]=carry; 
    } 
    /*for (int i=0;i<x;i++){ 
        cout<<arr3[i]<<" "; 
    } */
}
_____________________________________________________________________